{"candidate_pattern": "print\\(\"Result\\ of\\ eval:\",\\ eval\\(user_input\\)\\)", "example_context": "print(\"Result of eval:\", eval(user_input))", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/py_tests/test.py", "line": 5, "severity": "High", "fix": "Avoid using eval; sanitize inputs."}
{"candidate_pattern": "print\\(eval\\(data\\)\\)\\ \\ \\#\\ This\\ is\\ very\\ unsafe!", "example_context": "print(eval(data))  # This is very unsafe!", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/py_tests/test.py", "line": 14, "severity": "High", "fix": "Avoid using eval; sanitize inputs."}
{"candidate_pattern": "std::string\\ apiKey\\ =\\ \"API_KEY_12345\";", "example_context": "std::string apiKey = \"API_KEY_12345\";", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/c++_tests/test_bad.c++", "line": 17, "severity": "High", "fix": "Move secrets to environment variables or a secrets manager."}
{"candidate_pattern": "//\\ Vulnerability\\ 1:\\ Buffer\\ overflow\\ with\\ gets\\(\\)", "example_context": "// Vulnerability 1: Buffer overflow with gets()", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/c_tests/bad_test.c", "line": 24, "severity": "High", "fix": "Use fgets with size limits."}
{"candidate_pattern": "gets\\(input\\);\\ \\ //\\ unsafe", "example_context": "gets(input);  // unsafe", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/c_tests/bad_test.c", "line": 26, "severity": "High", "fix": "Use fgets with size limits."}
{"candidate_pattern": "sprintf\\(cmd,\\ \"echo\\ Hello\\ %s\",\\ users\\[0\\]\\.username\\);\\ //\\ vulnerable\\ to\\ injection", "example_context": "sprintf(cmd, \"echo Hello %s\", users[0].username); // vulnerable to injection", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/c_tests/bad_test.c", "line": 34, "severity": "High", "fix": "Use snprintf with buffer limits."}
{"candidate_pattern": "String\\ query\\ =\\ \"SELECT\\ \\*\\ FROM\\ users\\ WHERE\\ username\\ =\\ '\"\\ \\+\\ input\\ \\+\\ \"';\";", "example_context": "String query = \"SELECT * FROM users WHERE username = '\" + input + \"';\";", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/java_tests/Bad_Test1.java", "line": 33, "severity": "High", "fix": "Use prepared statements instead of string concatenation."}
{"candidate_pattern": "String\\ query\\ =\\ \"SELECT\\ \\*\\ FROM\\ users\\ WHERE\\ username\\ =\\ '\"\\ \\+\\ username\\ \\+\\ \"';\";", "example_context": "String query = \"SELECT * FROM users WHERE username = '\" + username + \"';\";", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/java_tests/java_test_project/BadTest1.java", "line": 8, "severity": "High", "fix": "Use prepared statements instead of string concatenation."}
{"candidate_pattern": "Runtime\\.getRuntime\\(\\)\\.exec\\(code\\);", "example_context": "Runtime.getRuntime().exec(code);", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/java_tests/java_test_project/BadTest2.java", "line": 17, "severity": "High", "fix": "Avoid dynamic command execution; sanitize inputs."}
{"candidate_pattern": "if\\(isset\\(\\$_POST\\['username'\\]\\)\\ \\&\\&\\ isset\\(\\$_POST\\['password'\\]\\)\\)\\{", "example_context": "if(isset($_POST['username']) && isset($_POST['password'])){", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/php_tests/BadTest1.php", "line": 4, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$u\\ =\\ \\$_POST\\['username'\\];", "example_context": "$u = $_POST['username'];", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/php_tests/BadTest1.php", "line": 5, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$p\\ =\\ \\$_POST\\['password'\\];", "example_context": "$p = $_POST['password'];", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/php_tests/BadTest1.php", "line": 6, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "if\\(isset\\(\\$_GET\\['file'\\]\\)\\)\\{", "example_context": "if(isset($_GET['file'])){", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/php_tests/BadTest2.php", "line": 4, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$filename\\ =\\ \\$_GET\\['file'\\];", "example_context": "$filename = $_GET['file'];", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/php_tests/BadTest2.php", "line": 5, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$prefs\\ =\\ unserialize\\(\\$_COOKIE\\['prefs'\\]\\);\\ //\\ unsafe\\ deserialization", "example_context": "$prefs = unserialize($_COOKIE['prefs']); // unsafe deserialization", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/php_tests/BadTest2.php", "line": 11, "severity": "High", "fix": "Avoid unserializing untrusted data."}
{"candidate_pattern": "if\\(isset\\(\\$_POST\\['username'\\]\\)\\ \\&\\&\\ isset\\(\\$_POST\\['password'\\]\\)\\)\\{", "example_context": "if(isset($_POST['username']) && isset($_POST['password'])){", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/php_tests/GoodTest1.php", "line": 8, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$stmt\\->bind_param\\(\"ss\",\\ \\$_POST\\['username'\\],\\ \\$_POST\\['password'\\]\\);\\ //\\ safe", "example_context": "$stmt->bind_param(\"ss\", $_POST['username'], $_POST['password']); // safe", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/php_tests/GoodTest1.php", "line": 10, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "move_uploaded_file\\(\\$file\\['tmp_name'\\],\\ \\$uploadDir\\.\\$filename\\);", "example_context": "move_uploaded_file($file['tmp_name'], $uploadDir.$filename);", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/php_tests/GoodTest2.php", "line": 9, "severity": "High", "fix": "Validate file type and path before moving."}
{"candidate_pattern": "\\$output\\ =\\ shell_exec\\(\\$_GET\\['cmd'\\]\\);\\ //\\ command\\ execution", "example_context": "$output = shell_exec($_GET['cmd']); // command execution", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/php_tests/MixedTest1.php", "line": 13, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "if\\(isset\\(\\$_GET\\['cmd'\\]\\)\\)\\{", "example_context": "if(isset($_GET['cmd'])){", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/php_tests/MixedTest1.php", "line": 12, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$password\\ =\\ \"password123\";", "example_context": "$password = \"password123\";", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/php_tests/MixedTest1.php", "line": 22, "severity": "High", "fix": "Do not store passwords in source code."}
{"candidate_pattern": "eval\\(user_code\\)\\ \\ \\#\\ Dangerous:\\ arbitrary\\ code\\ execution", "example_context": "eval(user_code)  # Dangerous: arbitrary code execution", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/py_tests/Bad_Test1.py", "line": 15, "severity": "High", "fix": "Avoid using eval; sanitize inputs."}
{"candidate_pattern": "exec\\(command\\)\\ \\ \\#\\ Dangerous:\\ arbitrary\\ code\\ execution", "example_context": "exec(command)  # Dangerous: arbitrary code execution", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/py_tests/Bad_Test1.py", "line": 20, "severity": "High", "fix": "Avoid using exec; sanitize inputs."}
{"candidate_pattern": "subprocess\\.run\\(cmd,\\ shell=True\\)\\ \\ \\#\\ shell=True\\ is\\ unsafe", "example_context": "subprocess.run(cmd, shell=True)  # shell=True is unsafe", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/py_tests/Bad_Test1.py", "line": 39, "severity": "High", "fix": "Use list args and avoid shell=True."}
{"candidate_pattern": "data\\ =\\ pickle\\.load\\(f\\)\\ \\ \\#\\ Unsafe\\ if\\ file\\ is\\ untrusted", "example_context": "data = pickle.load(f)  # Unsafe if file is untrusted", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/py_tests/Bad_Test1.py", "line": 33, "severity": "High", "fix": "Avoid deserializing untrusted input."}
{"candidate_pattern": "r\\ =\\ requests\\.get\\(\"https://example\\.com\",\\ verify=False\\)\\ \\ \\#\\ TLS\\ verification\\ disabled", "example_context": "r = requests.get(\"https://example.com\", verify=False)  # TLS verification disabled", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/py_tests/Bad_Test1.py", "line": 43, "severity": "High", "fix": "Enable certificate verification."}
{"candidate_pattern": "Detected\\ dependency\\ reference\\ to\\ 'requests'", "example_context": "Detected dependency reference to 'requests'", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/tests/py_tests/Bad_Test1.py", "line": null, "severity": "High", "fix": "Ensure TLS verification is enabled and certificates are validated."}
{"candidate_pattern": "std::string\\ apiKey\\ =\\ \"API_KEY_12345\";", "example_context": "std::string apiKey = \"API_KEY_12345\";", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_c_tests_test_bad.c", "line": 17, "severity": "High", "fix": "Move secrets to environment variables or a secrets manager."}
{"candidate_pattern": "//\\ Vulnerability\\ 1:\\ Buffer\\ overflow\\ with\\ gets\\(\\)", "example_context": "// Vulnerability 1: Buffer overflow with gets()", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_c_tests_bad_test.c", "line": 24, "severity": "High", "fix": "Use fgets with size limits."}
{"candidate_pattern": "gets\\(input\\);\\ \\ //\\ unsafe", "example_context": "gets(input);  // unsafe", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_c_tests_bad_test.c", "line": 26, "severity": "High", "fix": "Use fgets with size limits."}
{"candidate_pattern": "sprintf\\(cmd,\\ \"echo\\ Hello\\ %s\",\\ users\\[0\\]\\.username\\);\\ //\\ vulnerable\\ to\\ injection", "example_context": "sprintf(cmd, \"echo Hello %s\", users[0].username); // vulnerable to injection", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_c_tests_bad_test.c", "line": 34, "severity": "High", "fix": "Use snprintf with buffer limits."}
{"candidate_pattern": "String\\ query\\ =\\ \"SELECT\\ \\*\\ FROM\\ users\\ WHERE\\ username\\ =\\ '\"\\ \\+\\ input\\ \\+\\ \"';\";", "example_context": "String query = \"SELECT * FROM users WHERE username = '\" + input + \"';\";", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_java_tests_Bad_Test1.java", "line": 33, "severity": "High", "fix": "Use prepared statements instead of string concatenation."}
{"candidate_pattern": "String\\ query\\ =\\ \"SELECT\\ \\*\\ FROM\\ users\\ WHERE\\ username\\ =\\ '\"\\ \\+\\ username\\ \\+\\ \"';\";", "example_context": "String query = \"SELECT * FROM users WHERE username = '\" + username + \"';\";", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_java_tests_java_test_project_BadTest1.java", "line": 8, "severity": "High", "fix": "Use prepared statements instead of string concatenation."}
{"candidate_pattern": "Runtime\\.getRuntime\\(\\)\\.exec\\(code\\);", "example_context": "Runtime.getRuntime().exec(code);", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_java_tests_java_test_project_BadTest2.java", "line": 17, "severity": "High", "fix": "Avoid dynamic command execution; sanitize inputs."}
{"candidate_pattern": "if\\(isset\\(\\$_POST\\['username'\\]\\)\\ \\&\\&\\ isset\\(\\$_POST\\['password'\\]\\)\\)\\{", "example_context": "if(isset($_POST['username']) && isset($_POST['password'])){", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_php_tests_BadTest1.php", "line": 4, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$u\\ =\\ \\$_POST\\['username'\\];", "example_context": "$u = $_POST['username'];", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_php_tests_BadTest1.php", "line": 5, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$p\\ =\\ \\$_POST\\['password'\\];", "example_context": "$p = $_POST['password'];", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_php_tests_BadTest1.php", "line": 6, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "if\\(isset\\(\\$_GET\\['file'\\]\\)\\)\\{", "example_context": "if(isset($_GET['file'])){", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_php_tests_BadTest2.php", "line": 4, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$filename\\ =\\ \\$_GET\\['file'\\];", "example_context": "$filename = $_GET['file'];", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_php_tests_BadTest2.php", "line": 5, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$prefs\\ =\\ unserialize\\(\\$_COOKIE\\['prefs'\\]\\);\\ //\\ unsafe\\ deserialization", "example_context": "$prefs = unserialize($_COOKIE['prefs']); // unsafe deserialization", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_php_tests_BadTest2.php", "line": 11, "severity": "High", "fix": "Avoid unserializing untrusted data."}
{"candidate_pattern": "if\\(isset\\(\\$_POST\\['username'\\]\\)\\ \\&\\&\\ isset\\(\\$_POST\\['password'\\]\\)\\)\\{", "example_context": "if(isset($_POST['username']) && isset($_POST['password'])){", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_php_tests_GoodTest1.php", "line": 8, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$stmt\\->bind_param\\(\"ss\",\\ \\$_POST\\['username'\\],\\ \\$_POST\\['password'\\]\\);\\ //\\ safe", "example_context": "$stmt->bind_param(\"ss\", $_POST['username'], $_POST['password']); // safe", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_php_tests_GoodTest1.php", "line": 10, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "move_uploaded_file\\(\\$file\\['tmp_name'\\],\\ \\$uploadDir\\.\\$filename\\);", "example_context": "move_uploaded_file($file['tmp_name'], $uploadDir.$filename);", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_php_tests_GoodTest2.php", "line": 9, "severity": "High", "fix": "Validate file type and path before moving."}
{"candidate_pattern": "\\$output\\ =\\ shell_exec\\(\\$_GET\\['cmd'\\]\\);\\ //\\ command\\ execution", "example_context": "$output = shell_exec($_GET['cmd']); // command execution", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_php_tests_MixedTest1.php", "line": 13, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "if\\(isset\\(\\$_GET\\['cmd'\\]\\)\\)\\{", "example_context": "if(isset($_GET['cmd'])){", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_php_tests_MixedTest1.php", "line": 12, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$password\\ =\\ \"password123\";", "example_context": "$password = \"password123\";", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_php_tests_MixedTest1.php", "line": 22, "severity": "High", "fix": "Do not store passwords in source code."}
{"candidate_pattern": "eval\\(user_code\\)\\ \\ \\#\\ Dangerous:\\ arbitrary\\ code\\ execution", "example_context": "eval(user_code)  # Dangerous: arbitrary code execution", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_py_tests_Bad_Test1.py", "line": 15, "severity": "High", "fix": "Avoid using eval; sanitize inputs."}
{"candidate_pattern": "exec\\(command\\)\\ \\ \\#\\ Dangerous:\\ arbitrary\\ code\\ execution", "example_context": "exec(command)  # Dangerous: arbitrary code execution", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_py_tests_Bad_Test1.py", "line": 20, "severity": "High", "fix": "Avoid using exec; sanitize inputs."}
{"candidate_pattern": "subprocess\\.run\\(cmd,\\ shell=True\\)\\ \\ \\#\\ shell=True\\ is\\ unsafe", "example_context": "subprocess.run(cmd, shell=True)  # shell=True is unsafe", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_py_tests_Bad_Test1.py", "line": 39, "severity": "High", "fix": "Use list args and avoid shell=True."}
{"candidate_pattern": "data\\ =\\ pickle\\.load\\(f\\)\\ \\ \\#\\ Unsafe\\ if\\ file\\ is\\ untrusted", "example_context": "data = pickle.load(f)  # Unsafe if file is untrusted", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_py_tests_Bad_Test1.py", "line": 33, "severity": "High", "fix": "Avoid deserializing untrusted input."}
{"candidate_pattern": "r\\ =\\ requests\\.get\\(\"https://example\\.com\",\\ verify=False\\)\\ \\ \\#\\ TLS\\ verification\\ disabled", "example_context": "r = requests.get(\"https://example.com\", verify=False)  # TLS verification disabled", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_py_tests_Bad_Test1.py", "line": 43, "severity": "High", "fix": "Enable certificate verification."}
{"candidate_pattern": "Detected\\ dependency\\ reference\\ to\\ 'requests'", "example_context": "Detected dependency reference to 'requests'", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_py_tests_Bad_Test1.py", "line": null, "severity": "High", "fix": "Ensure TLS verification is enabled and certificates are validated."}
{"candidate_pattern": "print\\(\"Result\\ of\\ eval:\",\\ eval\\(user_input\\)\\)", "example_context": "print(\"Result of eval:\", eval(user_input))", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_py_tests_test.py", "line": 5, "severity": "High", "fix": "Avoid using eval; sanitize inputs."}
{"candidate_pattern": "print\\(eval\\(data\\)\\)\\ \\ \\#\\ This\\ is\\ very\\ unsafe!", "example_context": "print(eval(data))  # This is very unsafe!", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/tests_py_tests_test.py", "line": 14, "severity": "High", "fix": "Avoid using eval; sanitize inputs."}
{"candidate_pattern": "String\\ query\\ =\\ \"SELECT\\ \\*\\ FROM\\ users\\ WHERE\\ username\\ =\\ '\"\\ \\+\\ username\\ \\+\\ \"';\";", "example_context": "String query = \"SELECT * FROM users WHERE username = '\" + username + \"';\";", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/BadTest1.java", "line": 8, "severity": "High", "fix": "Use prepared statements instead of string concatenation."}
{"candidate_pattern": "if\\(isset\\(\\$_POST\\['username'\\]\\)\\ \\&\\&\\ isset\\(\\$_POST\\['password'\\]\\)\\)\\{", "example_context": "if(isset($_POST['username']) && isset($_POST['password'])){", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/BadTest1.php", "line": 4, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$u\\ =\\ \\$_POST\\['username'\\];", "example_context": "$u = $_POST['username'];", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/BadTest1.php", "line": 5, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$p\\ =\\ \\$_POST\\['password'\\];", "example_context": "$p = $_POST['password'];", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/BadTest1.php", "line": 6, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "Runtime\\.getRuntime\\(\\)\\.exec\\(code\\);", "example_context": "Runtime.getRuntime().exec(code);", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/BadTest2.java", "line": 17, "severity": "High", "fix": "Avoid dynamic command execution; sanitize inputs."}
{"candidate_pattern": "if\\(isset\\(\\$_GET\\['file'\\]\\)\\)\\{", "example_context": "if(isset($_GET['file'])){", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/BadTest2.php", "line": 4, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$filename\\ =\\ \\$_GET\\['file'\\];", "example_context": "$filename = $_GET['file'];", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/BadTest2.php", "line": 5, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$prefs\\ =\\ unserialize\\(\\$_COOKIE\\['prefs'\\]\\);\\ //\\ unsafe\\ deserialization", "example_context": "$prefs = unserialize($_COOKIE['prefs']); // unsafe deserialization", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/BadTest2.php", "line": 11, "severity": "High", "fix": "Avoid unserializing untrusted data."}
{"candidate_pattern": "//\\ Vulnerability\\ 1:\\ Buffer\\ overflow\\ with\\ gets\\(\\)", "example_context": "// Vulnerability 1: Buffer overflow with gets()", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/bad_test.c", "line": 24, "severity": "High", "fix": "Use fgets with size limits."}
{"candidate_pattern": "gets\\(input\\);\\ \\ //\\ unsafe", "example_context": "gets(input);  // unsafe", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/bad_test.c", "line": 26, "severity": "High", "fix": "Use fgets with size limits."}
{"candidate_pattern": "sprintf\\(cmd,\\ \"echo\\ Hello\\ %s\",\\ users\\[0\\]\\.username\\);\\ //\\ vulnerable\\ to\\ injection", "example_context": "sprintf(cmd, \"echo Hello %s\", users[0].username); // vulnerable to injection", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/bad_test.c", "line": 34, "severity": "High", "fix": "Use snprintf with buffer limits."}
{"candidate_pattern": "String\\ query\\ =\\ \"SELECT\\ \\*\\ FROM\\ users\\ WHERE\\ username\\ =\\ '\"\\ \\+\\ input\\ \\+\\ \"';\";", "example_context": "String query = \"SELECT * FROM users WHERE username = '\" + input + \"';\";", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/Bad_Test1.java", "line": 33, "severity": "High", "fix": "Use prepared statements instead of string concatenation."}
{"candidate_pattern": "eval\\(user_code\\)\\ \\ \\#\\ Dangerous:\\ arbitrary\\ code\\ execution", "example_context": "eval(user_code)  # Dangerous: arbitrary code execution", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/Bad_Test1.py", "line": 15, "severity": "High", "fix": "Avoid using eval; sanitize inputs."}
{"candidate_pattern": "exec\\(command\\)\\ \\ \\#\\ Dangerous:\\ arbitrary\\ code\\ execution", "example_context": "exec(command)  # Dangerous: arbitrary code execution", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/Bad_Test1.py", "line": 20, "severity": "High", "fix": "Avoid using exec; sanitize inputs."}
{"candidate_pattern": "subprocess\\.run\\(cmd,\\ shell=True\\)\\ \\ \\#\\ shell=True\\ is\\ unsafe", "example_context": "subprocess.run(cmd, shell=True)  # shell=True is unsafe", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/Bad_Test1.py", "line": 39, "severity": "High", "fix": "Use list args and avoid shell=True."}
{"candidate_pattern": "data\\ =\\ pickle\\.load\\(f\\)\\ \\ \\#\\ Unsafe\\ if\\ file\\ is\\ untrusted", "example_context": "data = pickle.load(f)  # Unsafe if file is untrusted", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/Bad_Test1.py", "line": 33, "severity": "High", "fix": "Avoid deserializing untrusted input."}
{"candidate_pattern": "r\\ =\\ requests\\.get\\(\"https://example\\.com\",\\ verify=False\\)\\ \\ \\#\\ TLS\\ verification\\ disabled", "example_context": "r = requests.get(\"https://example.com\", verify=False)  # TLS verification disabled", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/Bad_Test1.py", "line": 43, "severity": "High", "fix": "Enable certificate verification."}
{"candidate_pattern": "Detected\\ dependency\\ reference\\ to\\ 'requests'", "example_context": "Detected dependency reference to 'requests'", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/Bad_Test1.py", "line": null, "severity": "High", "fix": "Ensure TLS verification is enabled and certificates are validated."}
{"candidate_pattern": "if\\(isset\\(\\$_POST\\['username'\\]\\)\\ \\&\\&\\ isset\\(\\$_POST\\['password'\\]\\)\\)\\{", "example_context": "if(isset($_POST['username']) && isset($_POST['password'])){", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/GoodTest1.php", "line": 8, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$stmt\\->bind_param\\(\"ss\",\\ \\$_POST\\['username'\\],\\ \\$_POST\\['password'\\]\\);\\ //\\ safe", "example_context": "$stmt->bind_param(\"ss\", $_POST['username'], $_POST['password']); // safe", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/GoodTest1.php", "line": 10, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "move_uploaded_file\\(\\$file\\['tmp_name'\\],\\ \\$uploadDir\\.\\$filename\\);", "example_context": "move_uploaded_file($file['tmp_name'], $uploadDir.$filename);", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/GoodTest2.php", "line": 9, "severity": "High", "fix": "Validate file type and path before moving."}
{"candidate_pattern": "\\$output\\ =\\ shell_exec\\(\\$_GET\\['cmd'\\]\\);\\ //\\ command\\ execution", "example_context": "$output = shell_exec($_GET['cmd']); // command execution", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/MixedTest1.php", "line": 13, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "if\\(isset\\(\\$_GET\\['cmd'\\]\\)\\)\\{", "example_context": "if(isset($_GET['cmd'])){", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/MixedTest1.php", "line": 12, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$password\\ =\\ \"password123\";", "example_context": "$password = \"password123\";", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/MixedTest1.php", "line": 22, "severity": "High", "fix": "Do not store passwords in source code."}
{"candidate_pattern": "print\\(\"Result\\ of\\ eval:\",\\ eval\\(user_input\\)\\)", "example_context": "print(\"Result of eval:\", eval(user_input))", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/test.py", "line": 5, "severity": "High", "fix": "Avoid using eval; sanitize inputs."}
{"candidate_pattern": "print\\(eval\\(data\\)\\)\\ \\ \\#\\ This\\ is\\ very\\ unsafe!", "example_context": "print(eval(data))  # This is very unsafe!", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/test.py", "line": 14, "severity": "High", "fix": "Avoid using eval; sanitize inputs."}
{"candidate_pattern": "//\\ Vulnerability\\ 1:\\ Buffer\\ overflow\\ with\\ gets\\(\\)", "example_context": "// Vulnerability 1: Buffer overflow with gets()", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_c_tests_bad_test.c", "line": 24, "severity": "High", "fix": "Use fgets with size limits."}
{"candidate_pattern": "gets\\(input\\);\\ \\ //\\ unsafe", "example_context": "gets(input);  // unsafe", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_c_tests_bad_test.c", "line": 26, "severity": "High", "fix": "Use fgets with size limits."}
{"candidate_pattern": "sprintf\\(cmd,\\ \"echo\\ Hello\\ %s\",\\ users\\[0\\]\\.username\\);\\ //\\ vulnerable\\ to\\ injection", "example_context": "sprintf(cmd, \"echo Hello %s\", users[0].username); // vulnerable to injection", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_c_tests_bad_test.c", "line": 34, "severity": "High", "fix": "Use snprintf with buffer limits."}
{"candidate_pattern": "//\\ Vulnerability\\ 1:\\ Buffer\\ overflow\\ with\\ gets\\(\\)", "example_context": "// Vulnerability 1: Buffer overflow with gets()", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_c_tests_bad_test_1.c", "line": 24, "severity": "High", "fix": "Use fgets with size limits."}
{"candidate_pattern": "gets\\(input\\);\\ \\ //\\ unsafe", "example_context": "gets(input);  // unsafe", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_c_tests_bad_test_1.c", "line": 26, "severity": "High", "fix": "Use fgets with size limits."}
{"candidate_pattern": "sprintf\\(cmd,\\ \"echo\\ Hello\\ %s\",\\ users\\[0\\]\\.username\\);\\ //\\ vulnerable\\ to\\ injection", "example_context": "sprintf(cmd, \"echo Hello %s\", users[0].username); // vulnerable to injection", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_c_tests_bad_test_1.c", "line": 34, "severity": "High", "fix": "Use snprintf with buffer limits."}
{"candidate_pattern": "std::string\\ apiKey\\ =\\ \"API_KEY_12345\";", "example_context": "std::string apiKey = \"API_KEY_12345\";", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_c_tests_test_bad.c", "line": 17, "severity": "High", "fix": "Move secrets to environment variables or a secrets manager."}
{"candidate_pattern": "String\\ query\\ =\\ \"SELECT\\ \\*\\ FROM\\ users\\ WHERE\\ username\\ =\\ '\"\\ \\+\\ input\\ \\+\\ \"';\";", "example_context": "String query = \"SELECT * FROM users WHERE username = '\" + input + \"';\";", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_java_tests_Bad_Test1.java", "line": 33, "severity": "High", "fix": "Use prepared statements instead of string concatenation."}
{"candidate_pattern": "String\\ query\\ =\\ \"SELECT\\ \\*\\ FROM\\ users\\ WHERE\\ username\\ =\\ '\"\\ \\+\\ username\\ \\+\\ \"';\";", "example_context": "String query = \"SELECT * FROM users WHERE username = '\" + username + \"';\";", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_java_tests_java_test_project_BadTest1.java", "line": 8, "severity": "High", "fix": "Use prepared statements instead of string concatenation."}
{"candidate_pattern": "Runtime\\.getRuntime\\(\\)\\.exec\\(code\\);", "example_context": "Runtime.getRuntime().exec(code);", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_java_tests_java_test_project_BadTest2.java", "line": 17, "severity": "High", "fix": "Avoid dynamic command execution; sanitize inputs."}
{"candidate_pattern": "if\\(isset\\(\\$_POST\\['username'\\]\\)\\ \\&\\&\\ isset\\(\\$_POST\\['password'\\]\\)\\)\\{", "example_context": "if(isset($_POST['username']) && isset($_POST['password'])){", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_php_tests_BadTest1.php", "line": 4, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$u\\ =\\ \\$_POST\\['username'\\];", "example_context": "$u = $_POST['username'];", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_php_tests_BadTest1.php", "line": 5, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$p\\ =\\ \\$_POST\\['password'\\];", "example_context": "$p = $_POST['password'];", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_php_tests_BadTest1.php", "line": 6, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "if\\(isset\\(\\$_GET\\['file'\\]\\)\\)\\{", "example_context": "if(isset($_GET['file'])){", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_php_tests_BadTest2.php", "line": 4, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$filename\\ =\\ \\$_GET\\['file'\\];", "example_context": "$filename = $_GET['file'];", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_php_tests_BadTest2.php", "line": 5, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$prefs\\ =\\ unserialize\\(\\$_COOKIE\\['prefs'\\]\\);\\ //\\ unsafe\\ deserialization", "example_context": "$prefs = unserialize($_COOKIE['prefs']); // unsafe deserialization", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_php_tests_BadTest2.php", "line": 11, "severity": "High", "fix": "Avoid unserializing untrusted data."}
{"candidate_pattern": "if\\(isset\\(\\$_POST\\['username'\\]\\)\\ \\&\\&\\ isset\\(\\$_POST\\['password'\\]\\)\\)\\{", "example_context": "if(isset($_POST['username']) && isset($_POST['password'])){", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_php_tests_GoodTest1.php", "line": 8, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$stmt\\->bind_param\\(\"ss\",\\ \\$_POST\\['username'\\],\\ \\$_POST\\['password'\\]\\);\\ //\\ safe", "example_context": "$stmt->bind_param(\"ss\", $_POST['username'], $_POST['password']); // safe", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_php_tests_GoodTest1.php", "line": 10, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "move_uploaded_file\\(\\$file\\['tmp_name'\\],\\ \\$uploadDir\\.\\$filename\\);", "example_context": "move_uploaded_file($file['tmp_name'], $uploadDir.$filename);", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_php_tests_GoodTest2.php", "line": 9, "severity": "High", "fix": "Validate file type and path before moving."}
{"candidate_pattern": "\\$output\\ =\\ shell_exec\\(\\$_GET\\['cmd'\\]\\);\\ //\\ command\\ execution", "example_context": "$output = shell_exec($_GET['cmd']); // command execution", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_php_tests_MixedTest1.php", "line": 13, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "if\\(isset\\(\\$_GET\\['cmd'\\]\\)\\)\\{", "example_context": "if(isset($_GET['cmd'])){", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_php_tests_MixedTest1.php", "line": 12, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$password\\ =\\ \"password123\";", "example_context": "$password = \"password123\";", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_php_tests_MixedTest1.php", "line": 22, "severity": "High", "fix": "Do not store passwords in source code."}
{"candidate_pattern": "eval\\(user_code\\)\\ \\ \\#\\ Dangerous:\\ arbitrary\\ code\\ execution", "example_context": "eval(user_code)  # Dangerous: arbitrary code execution", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_py_tests_Bad_Test1.py", "line": 15, "severity": "High", "fix": "Avoid using eval; sanitize inputs."}
{"candidate_pattern": "exec\\(command\\)\\ \\ \\#\\ Dangerous:\\ arbitrary\\ code\\ execution", "example_context": "exec(command)  # Dangerous: arbitrary code execution", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_py_tests_Bad_Test1.py", "line": 20, "severity": "High", "fix": "Avoid using exec; sanitize inputs."}
{"candidate_pattern": "subprocess\\.run\\(cmd,\\ shell=True\\)\\ \\ \\#\\ shell=True\\ is\\ unsafe", "example_context": "subprocess.run(cmd, shell=True)  # shell=True is unsafe", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_py_tests_Bad_Test1.py", "line": 39, "severity": "High", "fix": "Use list args and avoid shell=True."}
{"candidate_pattern": "data\\ =\\ pickle\\.load\\(f\\)\\ \\ \\#\\ Unsafe\\ if\\ file\\ is\\ untrusted", "example_context": "data = pickle.load(f)  # Unsafe if file is untrusted", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_py_tests_Bad_Test1.py", "line": 33, "severity": "High", "fix": "Avoid deserializing untrusted input."}
{"candidate_pattern": "r\\ =\\ requests\\.get\\(\"https://example\\.com\",\\ verify=False\\)\\ \\ \\#\\ TLS\\ verification\\ disabled", "example_context": "r = requests.get(\"https://example.com\", verify=False)  # TLS verification disabled", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_py_tests_Bad_Test1.py", "line": 43, "severity": "High", "fix": "Enable certificate verification."}
{"candidate_pattern": "Detected\\ dependency\\ reference\\ to\\ 'requests'", "example_context": "Detected dependency reference to 'requests'", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_py_tests_Bad_Test1.py", "line": null, "severity": "High", "fix": "Ensure TLS verification is enabled and certificates are validated."}
{"candidate_pattern": "print\\(\"Result\\ of\\ eval:\",\\ eval\\(user_input\\)\\)", "example_context": "print(\"Result of eval:\", eval(user_input))", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_py_tests_test.py", "line": 5, "severity": "High", "fix": "Avoid using eval; sanitize inputs."}
{"candidate_pattern": "print\\(eval\\(data\\)\\)\\ \\ \\#\\ This\\ is\\ very\\ unsafe!", "example_context": "print(eval(data))  # This is very unsafe!", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/tests_py_tests_test.py", "line": 14, "severity": "High", "fix": "Avoid using eval; sanitize inputs."}
{"candidate_pattern": "std::string\\ apiKey\\ =\\ \"API_KEY_12345\";", "example_context": "std::string apiKey = \"API_KEY_12345\";", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/test_bad.c++", "line": 17, "severity": "High", "fix": "Move secrets to environment variables or a secrets manager."}
{"candidate_pattern": "strcpy\\(buf,\\ \"Overflow\"\\);\\ //\\ buffer\\ overflow", "example_context": "strcpy(buf, \"Overflow\"); // buffer overflow", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/C++/cpp_multi1.cpp", "line": 9, "severity": "High", "fix": "Prefer std::string or strncpy."}
{"candidate_pattern": "gets\\(buf\\);\\ //\\ unsafe,\\ can\\ overflow", "example_context": "gets(buf); // unsafe, can overflow", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/C_samples/c4.c", "line": 4, "severity": "High", "fix": "Use fgets with size limits."}
{"candidate_pattern": "strcpy\\(buffer,\\ a\\);\\ \\ \\ //\\ unsafe\\ if\\ a\\ is\\ longer\\ than\\ 63", "example_context": "strcpy(buffer, a);   // unsafe if a is longer than 63", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/C_samples/c6.c", "line": 21, "severity": "High", "fix": "Use strncpy or bounds-checked functions."}
{"candidate_pattern": "strcat\\(buffer,\\ b\\);\\ \\ \\ //\\ unsafe\\ concatenation", "example_context": "strcat(buffer, b);   // unsafe concatenation", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/C_samples/c6.c", "line": 22, "severity": "High", "fix": "Use strncat or safer alternatives."}
{"candidate_pattern": "strcpy\\(buf,\\ \"This\\ string\\ is\\ way\\ too\\ long!\"\\);\\ //\\ Buffer\\ overflow", "example_context": "strcpy(buf, \"This string is way too long!\"); // Buffer overflow", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/C_samples/c_multi1.c", "line": 7, "severity": "High", "fix": "Use strncpy or bounds-checked functions."}
{"candidate_pattern": "gets\\(input\\);\\ //\\ unsafe\\ input", "example_context": "gets(input); // unsafe input", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/C_samples/c_multi1.c", "line": 17, "severity": "High", "fix": "Use fgets with size limits."}
{"candidate_pattern": "strcpy\\(buf,\\ \"This\\ string\\ is\\ too\\ long!\"\\);\\ //\\ buffer\\ overflow", "example_context": "strcpy(buf, \"This string is too long!\"); // buffer overflow", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/C_samples/c_sample1.c", "line": 5, "severity": "High", "fix": "Use strncpy or bounds-checked functions."}
{"candidate_pattern": "http\\.ListenAndServe\\(port,\\ nil\\)", "example_context": "http.ListenAndServe(port, nil)", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/Go/g1.go", "line": 61, "severity": "High", "fix": "Use TLS and proper server configuration."}
{"candidate_pattern": "String\\ password\\ =\\ \"secret\";\\ //\\ hardcoded", "example_context": "String password = \"secret\"; // hardcoded", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/java_samples/j2.java", "line": 3, "severity": "High", "fix": "Do not store passwords in source code."}
{"candidate_pattern": "ObjectInputStream\\ ois\\ =\\ new\\ ObjectInputStream\\(new\\ FileInputStream\\(\"data\\.ser\"\\)\\);", "example_context": "ObjectInputStream ois = new ObjectInputStream(new FileInputStream(\"data.ser\"));", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/java_samples/j3.java", "line": 4, "severity": "High", "fix": "Avoid deserializing untrusted input."}
{"candidate_pattern": "String\\ query\\ =\\ \"SELECT\\ \\*\\ FROM\\ users\\ WHERE\\ id=\"\\ \\+\\ userInput;", "example_context": "String query = \"SELECT * FROM users WHERE id=\" + userInput;", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/java_samples/j4.java", "line": 5, "severity": "High", "fix": "Use prepared statements instead of string concatenation."}
{"candidate_pattern": "String\\ query\\ =\\ \"SELECT\\ \\*\\ FROM\\ users\\ WHERE\\ username\\ =\\ '\"\\ \\+\\ input\\ \\+\\ \"';\";", "example_context": "String query = \"SELECT * FROM users WHERE username = '\" + input + \"';\";", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/java_samples/j6.java", "line": 34, "severity": "High", "fix": "Use prepared statements instead of string concatenation."}
{"candidate_pattern": "Runtime\\.getRuntime\\(\\)\\.exec\\(\"ls\\ \\-la\"\\);\\ //\\ command\\ execution", "example_context": "Runtime.getRuntime().exec(\"ls -la\"); // command execution", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/java_samples/JavaMulti1.java", "line": 5, "severity": "High", "fix": "Avoid dynamic command execution; sanitize inputs."}
{"candidate_pattern": "ObjectInputStream\\ ois\\ =\\ new\\ ObjectInputStream\\(new\\ FileInputStream\\(\"data\\.ser\"\\)\\);", "example_context": "ObjectInputStream ois = new ObjectInputStream(new FileInputStream(\"data.ser\"));", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/java_samples/JavaMulti1.java", "line": 10, "severity": "High", "fix": "Avoid deserializing untrusted input."}
{"candidate_pattern": "String\\ password\\ =\\ \"secret\";\\ //\\ hardcoded", "example_context": "String password = \"secret\"; // hardcoded", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/java_samples/JavaMulti1.java", "line": 7, "severity": "High", "fix": "Do not store passwords in source code."}
{"candidate_pattern": "String\\ query\\ =\\ \"SELECT\\ \\*\\ FROM\\ users\\ WHERE\\ id=\"\\ \\+\\ userInput;\\ //\\ SQL\\ injection", "example_context": "String query = \"SELECT * FROM users WHERE id=\" + userInput; // SQL injection", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/java_samples/JavaMulti1.java", "line": 14, "severity": "High", "fix": "Use prepared statements instead of string concatenation."}
{"candidate_pattern": "String\\ query\\ =\\ \"SELECT\\ \\*\\ FROM\\ users\\ WHERE\\ username\\ =\\ '\"\\ \\+\\ userInput\\ \\+\\ \"';\";", "example_context": "String query = \"SELECT * FROM users WHERE username = '\" + userInput + \"';\";", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/java_samples/SQLTest1.java", "line": 14, "severity": "High", "fix": "Use prepared statements instead of string concatenation."}
{"candidate_pattern": "String\\ sql\\ =\\ \"SELECT\\ \\*\\ FROM\\ accounts\\ WHERE\\ email='\"\\ \\+\\ email\\ \\+\\ \"'\\ AND\\ role='\"\\ \\+\\ role\\ \\+\\ \"';\";", "example_context": "String sql = \"SELECT * FROM accounts WHERE email='\" + email + \"' AND role='\" + role + \"';\";", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/java_samples/SQLTest2.java", "line": 17, "severity": "High", "fix": "Use prepared statements instead of string concatenation."}
{"candidate_pattern": "Runtime\\.getRuntime\\(\\)\\.exec\\(command\\);", "example_context": "Runtime.getRuntime().exec(command);", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/java_samples/JavaVulnProject/src/TransactionProcessor.java", "line": 9, "severity": "High", "fix": "Avoid dynamic command execution; sanitize inputs."}
{"candidate_pattern": "ObjectInputStream\\ in\\ =\\ new\\ ObjectInputStream\\(fileIn\\);", "example_context": "ObjectInputStream in = new ObjectInputStream(fileIn);", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/java_samples/JavaVulnProject/src/UserManager.java", "line": 35, "severity": "High", "fix": "Avoid deserializing untrusted input."}
{"candidate_pattern": "ObjectOutputStream\\ out\\ =\\ new\\ ObjectOutputStream\\(fileOut\\);", "example_context": "ObjectOutputStream out = new ObjectOutputStream(fileOut);", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/java_samples/JavaVulnProject/src/UserManager.java", "line": 22, "severity": "High", "fix": "Avoid writing sensitive data insecurely."}
{"candidate_pattern": "String\\ password\\ =\\ \"secret\";\\ //\\ hardcoded", "example_context": "String password = \"secret\"; // hardcoded", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/java_samples/java_tests/j2.java", "line": 3, "severity": "High", "fix": "Do not store passwords in source code."}
{"candidate_pattern": "if\\(isset\\(\\$_POST\\['username'\\]\\)\\ \\&\\&\\ isset\\(\\$_POST\\['password'\\]\\)\\)\\{", "example_context": "if(isset($_POST['username']) && isset($_POST['password'])){", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/PHP/p1.php", "line": 34, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$u\\ =\\ \\$_POST\\['username'\\];", "example_context": "$u = $_POST['username'];", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/PHP/p1.php", "line": 35, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$p\\ =\\ \\$_POST\\['password'\\];", "example_context": "$p = $_POST['password'];", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/PHP/p1.php", "line": 36, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "move_uploaded_file\\(\\$_FILES\\['file'\\]\\['tmp_name'\\],\\ \\$target\\);", "example_context": "move_uploaded_file($_FILES['file']['tmp_name'], $target);", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/PHP/p2.php", "line": 9, "severity": "High", "fix": "Validate file type and path before moving."}
{"candidate_pattern": "\\$prefs\\ =\\ unserialize\\(\\$_COOKIE\\['prefs'\\]\\);\\ //\\ unsafe\\ deserialization", "example_context": "$prefs = unserialize($_COOKIE['prefs']); // unsafe deserialization", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/PHP/p3.php", "line": 10, "severity": "High", "fix": "Avoid unserializing untrusted data."}
{"candidate_pattern": "\\$unserialized\\ =\\ unserialize\\(\\$serialized\\);\\ //\\ can\\ be\\ unsafe\\ with\\ untrusted\\ input", "example_context": "$unserialized = unserialize($serialized); // can be unsafe with untrusted input", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/PHP/p4.php", "line": 26, "severity": "High", "fix": "Avoid unserializing untrusted data."}
{"candidate_pattern": "include\\(__DIR__\\ \\.\\ '/includes/'\\ \\.\\ \\$file\\);", "example_context": "include(__DIR__ . '/includes/' . $file);", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/PHP/p6.php", "line": 31, "severity": "High", "fix": "Avoid dynamic includes; validate file names."}
{"candidate_pattern": "\\$action\\ =\\ \\$_GET\\['action'\\]\\ \\?\\?\\ '';", "example_context": "$action = $_GET['action'] ?? '';", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/PHP/p6.php", "line": 21, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$user\\ =\\ \\$_GET\\['user'\\]\\ \\?\\?\\ 'alice';", "example_context": "$user = $_GET['user'] ?? 'alice';", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/PHP/p6.php", "line": 23, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$file\\ =\\ \\$_GET\\['file'\\]\\ \\?\\?\\ 'default\\.php';", "example_context": "$file = $_GET['file'] ?? 'default.php';", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/PHP/p6.php", "line": 30, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$cfg\\ =\\ \\[", "example_context": "$cfg = [", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/PHP/p6.php", "line": 6, "severity": "High", "fix": "Use prepared statements or ORM methods."}
{"candidate_pattern": "exec\\(code\\)\\ \\ \\#\\ arbitrary\\ code\\ execution", "example_context": "exec(code)  # arbitrary code execution", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/python_samples/p2.py", "line": 2, "severity": "High", "fix": "Avoid using exec; sanitize inputs."}
{"candidate_pattern": "password\\ =\\ \"123456\"", "example_context": "password = \"123456\"", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/python_samples/p3.py", "line": 1, "severity": "High", "fix": "Do not store passwords in source code."}
{"candidate_pattern": "data\\ =\\ pickle\\.loads\\(b\"cos\\\\nsystem\\\\n\\(S'ls'\\\\ntR\\.\"\\)\\ \\ \\#\\ unsafe\\ deserialization", "example_context": "data = pickle.loads(b\"cos\\nsystem\\n(S'ls'\\ntR.\")  # unsafe deserialization", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/python_samples/p4.py", "line": 2, "severity": "High", "fix": "Avoid deserializing untrusted input."}
{"candidate_pattern": "requests\\.get\\(\"https://example\\.com\",\\ verify=False\\)\\ \\ \\#\\ disables\\ SSL\\ verification", "example_context": "requests.get(\"https://example.com\", verify=False)  # disables SSL verification", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/python_samples/p5.py", "line": 2, "severity": "High", "fix": "Enable certificate verification."}
{"candidate_pattern": "Detected\\ dependency\\ reference\\ to\\ 'requests'", "example_context": "Detected dependency reference to 'requests'", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/python_samples/p5.py", "line": null, "severity": "High", "fix": "Ensure TLS verification is enabled and certificates are validated."}
{"candidate_pattern": "return\\ eval\\(data\\.split\\(\"EVAL:\"\\)\\[1\\]\\)\\ \\ \\#\\ Unsafe\\ eval", "example_context": "return eval(data.split(\"EVAL:\")[1])  # Unsafe eval", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/python_samples/p6.py", "line": 54, "severity": "High", "fix": "Avoid using eval; sanitize inputs."}
{"candidate_pattern": "subprocess\\.run\\(command,\\ shell=True\\)\\ \\ \\#\\ Command\\ injection\\ risk", "example_context": "subprocess.run(command, shell=True)  # Command injection risk", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/python_samples/p6.py", "line": 60, "severity": "High", "fix": "Use list args and avoid shell=True."}
{"candidate_pattern": "return\\ pickle\\.load\\(f\\)", "example_context": "return pickle.load(f)", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/python_samples/p6.py", "line": 34, "severity": "High", "fix": "Avoid deserializing untrusted input."}
{"candidate_pattern": "return\\ yaml\\.load\\(f,\\ Loader=yaml\\.Loader\\)\\ \\ \\#\\ Unsafe\\ YAML\\ deserialization", "example_context": "return yaml.load(f, Loader=yaml.Loader)  # Unsafe YAML deserialization", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/python_samples/p6.py", "line": 41, "severity": "High", "fix": "Avoid deserializing untrusted input."}
{"candidate_pattern": "os\\.system\\(\"echo\\ 'Special\\ event\\ triggered!'\"\\)\\ \\ \\#\\ Command\\ injection", "example_context": "os.system(\"echo 'Special event triggered!'\")  # Command injection", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/python_samples/p6.py", "line": 91, "severity": "High", "fix": "Validate inputs and use subprocess with args."}
{"candidate_pattern": "secret\\ =\\ \"TopSecretData\"", "example_context": "secret = \"TopSecretData\"", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/python_samples/p6.py", "line": 136, "severity": "High", "fix": "Move secrets to environment variables or a secrets manager."}
{"candidate_pattern": "response\\ =\\ requests\\.post\\(url,\\ data=payload,\\ verify=False\\)", "example_context": "response = requests.post(url, data=payload, verify=False)", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/python_samples/p6.py", "line": 79, "severity": "High", "fix": "Do not disable TLS verification in production."}
{"candidate_pattern": "Detected\\ dependency\\ reference\\ to\\ 'requests'", "example_context": "Detected dependency reference to 'requests'", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/python_samples/p6.py", "line": null, "severity": "High", "fix": "Ensure TLS verification is enabled and certificates are validated."}
{"candidate_pattern": "return\\ pickle\\.loads\\(serialized\\)", "example_context": "return pickle.loads(serialized)", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/python_samples/p7.py", "line": 35, "severity": "High", "fix": "Avoid deserializing untrusted input."}
{"candidate_pattern": "eval\\(input\\)\\ \\ \\#\\ unsafe", "example_context": "eval(input)  # unsafe", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/python_samples/python_test1.py", "line": 3, "severity": "High", "fix": "Avoid using eval; sanitize inputs."}
{"candidate_pattern": "eval\\(user_code\\)\\ \\ \\#\\ unsafe\\ eval", "example_context": "eval(user_code)  # unsafe eval", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/python_samples/py_multi1.py", "line": 5, "severity": "High", "fix": "Avoid using eval; sanitize inputs."}
{"candidate_pattern": "exec\\(code\\)\\ \\ \\#\\ unsafe\\ exec", "example_context": "exec(code)  # unsafe exec", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/python_samples/py_multi1.py", "line": 8, "severity": "High", "fix": "Avoid using exec; sanitize inputs."}
{"candidate_pattern": "data\\ =\\ pickle\\.loads\\(b\"cos\\\\nsystem\\\\n\\(S'ls'\\\\ntR\\.\"\\)\\ \\ \\#\\ unsafe\\ deserialization", "example_context": "data = pickle.loads(b\"cos\\nsystem\\n(S'ls'\\ntR.\")  # unsafe deserialization", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/python_samples/py_multi1.py", "line": 13, "severity": "High", "fix": "Avoid deserializing untrusted input."}
{"candidate_pattern": "requests\\.get\\(\"https://example\\.com\",\\ verify=False\\)\\ \\ \\#\\ disables\\ SSL\\ verification", "example_context": "requests.get(\"https://example.com\", verify=False)  # disables SSL verification", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/python_samples/py_multi1.py", "line": 16, "severity": "High", "fix": "Enable certificate verification."}
{"candidate_pattern": "password\\ =\\ \"123456\"\\ \\ \\#\\ hardcoded\\ password", "example_context": "password = \"123456\"  # hardcoded password", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/python_samples/py_multi1.py", "line": 10, "severity": "High", "fix": "Do not store passwords in source code."}
{"candidate_pattern": "Detected\\ dependency\\ reference\\ to\\ 'requests'", "example_context": "Detected dependency reference to 'requests'", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/python_samples/py_multi1.py", "line": null, "severity": "High", "fix": "Ensure TLS verification is enabled and certificates are validated."}
{"candidate_pattern": "password\\ =\\ input\\(\"Enter\\ password:\\ \"\\)", "example_context": "password = input(\"Enter password: \")", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/python_samples/sql_injection1.py", "line": 7, "severity": "High", "fix": "Do not store passwords in source code."}
{"candidate_pattern": "eval\\(code\\)", "example_context": "eval(code)", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/Ruby/r1.rb", "line": 12, "severity": "High", "fix": "Avoid eval; use safer parsing."}
{"candidate_pattern": "system\\(cmd\\)", "example_context": "system(cmd)", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/code_samples/Ruby/r1.rb", "line": 7, "severity": "High", "fix": "Sanitize inputs before executing system calls."}
{"candidate_pattern": "if\\(isset\\(\\$_POST\\['username'\\]\\)\\ \\&\\&\\ isset\\(\\$_POST\\['password'\\]\\)\\)\\{", "example_context": "if(isset($_POST['username']) && isset($_POST['password'])){", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/php_tests_BadTest1.php", "line": 4, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$u\\ =\\ \\$_POST\\['username'\\];", "example_context": "$u = $_POST['username'];", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/php_tests_BadTest1.php", "line": 5, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$p\\ =\\ \\$_POST\\['password'\\];", "example_context": "$p = $_POST['password'];", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/php_tests_BadTest1.php", "line": 6, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "if\\(isset\\(\\$_GET\\['file'\\]\\)\\)\\{", "example_context": "if(isset($_GET['file'])){", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/php_tests_BadTest2.php", "line": 4, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$filename\\ =\\ \\$_GET\\['file'\\];", "example_context": "$filename = $_GET['file'];", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/php_tests_BadTest2.php", "line": 5, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$prefs\\ =\\ unserialize\\(\\$_COOKIE\\['prefs'\\]\\);\\ //\\ unsafe\\ deserialization", "example_context": "$prefs = unserialize($_COOKIE['prefs']); // unsafe deserialization", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/php_tests_BadTest2.php", "line": 11, "severity": "High", "fix": "Avoid unserializing untrusted data."}
{"candidate_pattern": "if\\(isset\\(\\$_POST\\['username'\\]\\)\\ \\&\\&\\ isset\\(\\$_POST\\['password'\\]\\)\\)\\{", "example_context": "if(isset($_POST['username']) && isset($_POST['password'])){", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/php_tests_GoodTest1.php", "line": 8, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$stmt\\->bind_param\\(\"ss\",\\ \\$_POST\\['username'\\],\\ \\$_POST\\['password'\\]\\);\\ //\\ safe", "example_context": "$stmt->bind_param(\"ss\", $_POST['username'], $_POST['password']); // safe", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/php_tests_GoodTest1.php", "line": 10, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "move_uploaded_file\\(\\$file\\['tmp_name'\\],\\ \\$uploadDir\\.\\$filename\\);", "example_context": "move_uploaded_file($file['tmp_name'], $uploadDir.$filename);", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/php_tests_GoodTest2.php", "line": 9, "severity": "High", "fix": "Validate file type and path before moving."}
{"candidate_pattern": "\\$output\\ =\\ shell_exec\\(\\$_GET\\['cmd'\\]\\);\\ //\\ command\\ execution", "example_context": "$output = shell_exec($_GET['cmd']); // command execution", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/php_tests_MixedTest1.php", "line": 13, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "if\\(isset\\(\\$_GET\\['cmd'\\]\\)\\)\\{", "example_context": "if(isset($_GET['cmd'])){", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/php_tests_MixedTest1.php", "line": 12, "severity": "High", "fix": "Validate and sanitize all user input."}
{"candidate_pattern": "\\$password\\ =\\ \"password123\";", "example_context": "$password = \"password123\";", "file": "/mnt/c/Users/Owner/Downloads/ML_Project/Machine_Learning_Project-main/Machine_Learning_Project-main/uploads/php_tests_MixedTest1.php", "line": 22, "severity": "High", "fix": "Do not store passwords in source code."}
