
LIB_VULN_DB = {
    # JavaScript / Node
    "lodash": {
        "advisory": "Known prototype pollution issues in older lodash versions (<4.17.21).",
        "severity": "High",
        "fix": "Upgrade lodash to latest stable (>=4.17.21)."
    },
    "jquery": {
        "advisory": "Older jquery versions have XSS or prototype pollution issues.",
        "severity": "Medium",
        "fix": "Upgrade to latest patch of jquery."
    },
    "express": {
        "advisory": "Certain middleware misconfiguration can lead to vulnerabilities; check version.",
        "severity": "Medium",
        "fix": "Keep express and middleware up-to-date; use helmet for headers."
    },
    "underscore": {
        "advisory": "Older versions may have prototype pollution issues.",
        "severity": "Medium",
        "fix": "Upgrade to maintained versions or replace usage."
    },

    # Python
    "pyyaml": {
        "advisory": "yaml.load() is unsafe if loader isn't specified (can lead to code execution).",
        "severity": "High",
        "fix": "Use yaml.safe_load() or specify SafeLoader."
    },
    "django": {
        "advisory": "Certain outdated Django versions have critical RCE/XSS/CSRF related issues.",
        "severity": "High",
        "fix": "Upgrade to supported Django version and follow security guide."
    },

    # PHP / Composer
    "symfony/http-foundation": {
        "advisory": "Previous vulnerable versions have issues. Check composer advisories.",
        "severity": "Medium",
        "fix": "Upgrade symfony components."
    },

    # Java (Maven)
    "log4j": {
        "advisory": "Log4Shell (CVE-2021-44228) is critical; affected versions of log4j 2.x allow remote code execution.",
        "severity": "Critical",
        "fix": "Upgrade to log4j >= 2.17.1 (or follow vendor guidance)."
    },

    # Ruby (gems)
    "rails": {
        "advisory": "Older Rails versions may have multiple security advisories.",
        "severity": "High",
        "fix": "Upgrade Rails and apply security patches."
    },

    # Go modules (module path keys simplified)
    "github.com/dgrijalva/jwt-go": {
        "advisory": "dgrijalva/jwt-go has unmaintained versions; use maintained forks.",
        "severity": "High",
        "fix": "Migrate to github.com/golang-jwt/jwt or maintained alternatives."
    },

    # Rust crates (example)
    "serde_json": {
        "advisory": "Be cautious with untrusted deserialization patterns.",
        "severity": "Medium",
        "fix": "Validate inputs and avoid unsafe deserialization patterns."
    },

    # Generic examples to surface package-related findings
    "requests": {
        "advisory": "Using requests with verify=False disables TLS verification.",
        "severity": "High",
        "fix": "Ensure TLS verification is enabled and certificates are validated."
    },

    # Add more packages / advisories below as needed
}


HEURISTICS = {
    "Python": [
        (r"\beval\s*\(", "Unsafe eval()", "High", "Avoid eval(); use ast.literal_eval or strict parsing."),
        (r"\bexec\s*\(", "Unsafe exec()", "High", "Avoid exec(); restrict execution or remove."),
        (r"subprocess\..+\bshell\s*=\s*True", "subprocess(..., shell=True)", "High", "Use list args and avoid shell=True."),
        (r"pickle\.(loads|load)\s*\(", "Unsafe pickle deserialization", "High", "Do not unpickle untrusted data."),
        (r"yaml\.load\s*\(", "Unsafe yaml.load()", "High", "Use yaml.safe_load() or SafeLoader."),
        (r"requests\.get\(.+verify\s*=\s*False", "TLS verification disabled", "High", "Enable certificate verification."),
        (r"os\.system\s*\(", "Direct system call", "High", "Validate inputs and use subprocess with args."),
        (r"open\s*\(\s*[^,]+,\s*['\"]w['\"]", "File write without validation", "Medium", "Validate file paths/permissions."),
        (r"open\s*\(\s*[^,]+,\s*['\"]a['\"]", "File append without validation", "Medium", "Validate file paths/permissions."),
        (r"socket\.socket\(", "Raw socket usage", "Low", "Ensure correct use and validation."),
        (r"ctypes\.CDLL", "Loading native library via ctypes", "High", "Validate library paths and inputs."),
        (r"ctypes\.windll|ctypes\.oledll", "Windows DLL load via ctypes", "High", "Validate library paths and inputs."),
        (r"importlib\.import_module\s*\(", "Dynamic import", "Medium", "Avoid importing untrusted modules dynamically."),
        (r"__import__\s*\(", "Dynamic import via __import__", "Medium", "Avoid importing untrusted modules dynamically."),
        (r"exec\\s*\\(", "exec used", "High", "Avoid exec; remove or heavily restrict."),
        (r"input\s*\\(", "Use of input()", "Medium", "Sanitize inputs before use."),
        (r"hashlib\\.md5", "MD5 hashing", "Medium", "Use SHA-256 or bcrypt/Argon2."),
        (r"hashlib\\.sha1", "SHA1 hashing", "Medium", "Use SHA-256 or better."),
        (r"os\\.environ\\[", "Environment variable access", "Low", "Ensure sensitive data handled securely."),
        (r"os\\.remove\\(", "File deletion calls", "Medium", "Validate path before deletion."),
        (r"shutil\\.rmtree\\(", "Recursive deletion", "High", "Confirm directory safety before deletion."),
        (r"tempfile\\.", "Temporary file usage", "Low", "Use secure temporary file APIs and handle properly."),
        (r"ftplib\\.FTP\\(", "FTP usage", "Medium", "Prefer SFTP/FTPS and avoid plaintext credentials."),
        (r"xml\\.etree\\.ElementTree\\.parse\\(", "XML parsing", "High", "Use safe XML parsers and avoid XXE."),
        (r"lxml\\.etree\\.fromstring\\(", "XML parsing with lxml", "High", "Avoid parsing untrusted XML without protections."),
        (r"yaml\\.FullLoader", "Unsafe YAML FullLoader", "High", "Use yaml.safe_load or SafeLoader."),
        (r"subprocess\\.Popen\\([^\\)]*shell\\s*=\\s*True", "Popen with shell=True", "High", "Use list args and avoid shell=True."),
        (r"subprocess\\.call\\([^\\)]*shell\\s*=\\s*True", "subprocess.call with shell=True", "High", "Use list args and avoid shell=True."),
        (r"tempfile\\.mktemp\\(", "Insecure tempfile usage", "Medium", "Use tempfile.NamedTemporaryFile or mkstemp."),
        (r"bcrypt\\.checkpw\\(", "bcrypt present", "Low", "Use bcrypt correctly for password hashing."),
        (r"logging\\.basicConfig\\([^\\)]*format\\s*=\\s*['\\\"]%s", "Potential log format injection", "Medium", "Avoid untrusted format specifiers in logs."),
        (r"requests\\.post\\([^\\)]*data\\s*=", "requests data post", "Low", "Avoid posting secrets in plaintext."),
        (r"pickle\\.HIGHEST_PROTOCOL", "Pickle protocol usage", "High", "Avoid pickle with untrusted data."),
        (r"multiprocessing\\.Process\\(", "multiprocessing Process usage", "Low", "Careful with shared memory and state."),
        (r"threading\\.Thread\\(", "threading usage", "Low", "Sanitize thread target inputs."),
        (r"os\\.popen\\(", "os.popen usage", "High", "Avoid popen; use subprocess."),
        (r"os\\.execv?e?\\(", "os.exec family usage", "High", "Avoid uncontrolled exec calls."),
        (r"socket\\.create_connection\\(", "socket connection creation", "Low", "Validate remote endpoints."),
        (r"xml\\.dom\\.minidom\\.parse\\(", "XML parsing", "High", "Avoid XXE; disable entity expansion."),
        (r"sslv3|SSLv3", "Use of SSLv3", "High", "Disable SSLv3, use TLS v1.2+."),
        (r"bcrypt\\.gensalt\\(", "bcrypt salt generation", "Low", "Check cost parameter for strength."),
        (r"ssl\\.create_default_context\\(", "SSL context creation", "Low", "Use proper cert validation."),
        (r"jwt\\.decode\\(", "JWT decode", "Medium", "Validate token signature and algorithms."),
        (r"eval\\s*\\(", "eval usage (general)", "High", "Avoid eval on arbitrary strings."),
        (r"__getattr__\\s*\\(", "Dynamic attribute access", "Low", "Be careful with unchecked attribute access."),
        (r"subprocess\\.check_output\\(", "check_output usage", "Low", "Validate args to avoid command injection."),
        (r"sqlalchemy\\.create_engine\\(", "SQLAlchemy engine creation", "Low", "Avoid passing untrusted URIs, use proper credentials."),
        (r"cx_Oracle\\.connect\\(", "Oracle DB connect", "Low", "Avoid embedding credentials in code."),
        (r"psycopg2\\.connect\\(", "Postgres connect", "Low", "Avoid embedding credentials in code."),
        (r"redis\\.Redis\\(", "Redis usage", "Low", "Avoid storing secrets in code."),
        (r"flask\\.run\\(", "Flask debug server", "Medium", "Don't run flask debug server in production."),
        (r"djangÎ¿\\.conf", "Django config reference", "Low", "Ensure DEBUG=False in production."),
        # (extra rules left for future expansion as needed)
    ],

    "JavaScript": [
        (r"\beval\s*\(", "Unsafe eval()", "High", "Avoid eval(); use safer parsing or JSON.parse."),
        (r"new Function\s*\(", "Dynamic function constructor", "High", "Avoid dynamic code evaluation."),
        (r"child_process\.(exec|execSync)\s*\(", "child_process.exec used", "High", "Use spawn with args; validate inputs."),
        (r"document\.write\s*\(", "Potential XSS via document.write", "High", "Avoid document.write; sanitize inputs."),
        (r"innerHTML\s*=", "DOM injection risk", "High", "Sanitize input before assigning to innerHTML."),
        (r"outerHTML\s*=", "DOM injection risk", "High", "Sanitize input before assigning to outerHTML."),
        (r"setTimeout\s*\(\s*['\"].*eval", "eval in setTimeout", "High", "Avoid string-form setTimeout; use function handlers."),
        (r"setInterval\s*\(\s*['\"].*eval", "eval in setInterval", "High", "Avoid string-form setInterval; use function handlers."),
        (r"localStorage\.setItem\s*\(", "Storing data in localStorage", "Medium", "Avoid storing secrets in localStorage."),
        (r"sessionStorage\.setItem\s*\(", "Storing data in sessionStorage", "Medium", "Avoid storing secrets in sessionStorage."),
        (r"document\.cookie\s*=", "Cookie assignment", "Medium", "Ensure HttpOnly/Secure flags and avoid storing secrets."),
        (r"fetch\s*\(", "Fetch API usage", "Low", "Validate request payloads and handle responses securely."),
        (r"XMLHttpRequest\s*\(", "XHR usage", "Low", "Validate request payloads and handle responses securely."),
        (r"require\s*\(\s*['\"].+['\"]\s*\)", "Dynamic require", "Medium", "Validate module paths and avoid executing untrusted modules."),
        (r"import\(.+\)", "Dynamic import()", "Medium", "Validate imports and avoid loading untrusted code."),
        (r"fs\.writeFileSync\s*\(", "Server-side file write", "Medium", "Validate file paths and content."),
        (r"fs\.readFileSync\s*\(", "Server-side file read", "Low", "Validate file paths and avoid exposing sensitive files."),
        (r"process\.env\.", "Environment variable access", "Low", "Avoid exposing secret env vars to client code."),
        (r"crypto\.createHash\s*\(\s*['\"]?md5['\"]?", "MD5 usage", "Medium", "Use secure hashing algorithms."),
        (r"crypto\.createCipheriv\s*\(", "Cipher creation", "Medium", "Use authenticated encryption modes like AES-GCM."),
        (r"document\.getElementById\(", "DOM access", "Low", "Sanitize before inserting content into DOM."),
        (r"window\.location\s*=", "Potential open redirect or JS navigation", "Medium", "Validate URL before redirecting."),
        (r"eval\(\s*fetch", "Eval with fetch result", "High", "Avoid evaluating remote content."),
        (r"Function\\(.*\\)", "Function constructor dynamic code", "High", "Avoid dynamic code creation."),
        (r"process\\.exit\\(", "process.exit usage", "Low", "Avoid abrupt process termination in production."),
        (r"process\\.kill\\(", "process.kill usage", "Low", "Validate signals and preserve safe operations."),
        (r"vm\\.runInNewContext\\(", "Node VM usage", "High", "Avoid executing untrusted code in VM without sandboxing."),
        (r"bcrypt\\.compare\\(", "bcrypt presence", "Low", "Use secure password hashing and salts properly."),
        (r"jwt\\.sign\\(", "JWT generation", "Low", "Ensure secure signing algorithms and key management."),
        (r"eval\\s*\\(", "eval generic", "High", "Avoid eval entirely"),
        (r"document\\.createElement\\(['\"]script['\"]\\)", "Script element injection", "High", "Avoid dynamic script insertion from untrusted sources."),
        (r"innerText\\s*=", "innerText assignment", "Low", "Prefer textContent/innerText carefully and sanitize input."),
        (r"location\\.hash", "Location hash usage", "Low", "Be mindful of sensitive info in URL fragments."),
        (r"open\\(', '", "Window open usage", "Low", "Validate popup URLs and targets."),
        (r"postMessage\\(", "postMessage usage", "Medium", "Validate message origin and contents."),
        (r"document\\.addEventListener\\(\\s*['\"]message['\"]", "postMessage handling", "Medium", "Validate origin in message handler."),
        (r"__proto__", "Prototype pollution pattern", "High", "Avoid setting __proto__ from untrusted sources."),
        (r"Object\\.assign\\(", "object assign", "Low", "Avoid merging untrusted objects directly into prototypes."),
        (r"Function.prototype.constructor", "Function constructor exposure", "High", "Avoid exposing Function constructor on prototypes."),
        (r"setImmediate\\(", "setImmediate usage", "Low", "Consider alternatives depending on environment."),
        (r"process\\.on\\('uncaughtException'", "uncaughtException listener", "Low", "Handle exceptions gracefully."),
        (r"process\\.on\\('unhandledRejection'", "unhandledRejection listener", "Low", "Handle Promise rejections."),
        (r"child_process\\.spawn\\(", "spawn usage", "Low", "Validate args to avoid command injection."),
        (r"deasync\\.", "deasync usage", "Medium", "Avoid blocking Node event loop."),
        (r"fs\\.chmodSync\\(", "chmod usage", "Low", "Check permission changes carefully."),
        (r"fs\\.unlinkSync\\(", "unlink usage", "Low", "Validate file deletions."),
        (r"crypto\\.randomBytes\\(", "randomBytes usage", "Low", "Use secure random for keys/IVs."),
        (r"eval\\s*\\(", "duplicate eval entry (catch-all)", "High", "Avoid eval entirely."),
    ],

    "TypeScript": [
        (r"\beval\s*\(", "Unsafe eval()", "High", "Avoid eval(); use safer alternatives."),
        (r"new Function\s*\(", "Dynamic function constructor", "High", "Avoid dynamic code generation."),
        (r"any\s*:", "Use of any type", "Medium", "Prefer typed interfaces to catch bugs early."),
        (r"as\s+any", "Casting to any", "Medium", "Avoid unsafe casts to any."),
        (r"<any>", "Generic any usage", "Medium", "Avoid generic any usage."),
        (r"DOMParser\s*\(", "DOM parsing", "Medium", "Sanitize content before parsing."),
        (r"request\\(", "HTTP request use in TS", "Low", "Validate inputs and sanitize outputs."),
        (r"Promise\\<any\\>", "Promise<any>", "Medium", "Use typed Promises."),
        (r"export\\s+default\\s+class", "Default class export", "Low", "Prefer named exports for clarity."),
        (r"ts-ignore", "ts-ignore directive", "Low", "Avoid ignoring type errors; fix underlying issues."),
        (r"@ts-ignore", "ts-ignore comment", "Low", "Avoid ignoring type errors; fix underlying issues."),
        (r"module\\.", "module usage", "Low", "Review module API usage."),
        (r"namespace\\s+", "namespace usage", "Low", "Prefer ES modules."),
        (r"require\\(", "require usage in TS", "Low", "Prefer import syntax."),
        (r"Object\\.assign\\(", "Object.assign usage", "Low", "Be careful with prototype pollution."),
        (r"document\\.createElement\\(", "DOM element creation", "Low", "Sanitize element attributes."),
        (r"localStorage\\.", "localStorage usage", "Medium", "Avoid storing secrets in localStorage."),
        (r"sessionStorage\\.", "sessionStorage usage", "Medium", "Avoid storing secrets in sessionStorage."),
        (r"fetch\\(", "fetch usage", "Low", "Validate fetch inputs and outputs."),
        (r"XMLHttpRequest\\(", "XHR usage", "Low", "Validate XHR payloads."),
        (r"crypto\\.createHash\\(", "Weak crypto check", "Medium", "Avoid MD5 or SHA1; prefer SHA-256+"),
        (r"jwt\\.sign\\(", "JWT sign", "Low", "Ensure secure algorithms and key management."),
        (r"intersecting types", "type intersection patterns", "Low", "Ensure types are well-defined."),
        (r"declare\\s+module\\s+", "ambient module declarations", "Low", "Use only when necessary."),
        (r"eval\\s*\\(", "eval usage", "High", "Avoid eval in TS."),
        (r"Function\\(", "Function constructor", "High", "Avoid runtime function generation."),
        (r"React\\.dangerouslySetInnerHTML", "dangerouslySetInnerHTML", "High", "Avoid use or sanitize content."),
        (r"any\\s*=", "variable typed any", "Medium", "Avoid any types when possible."),
        (r"window\\.addEventListener\\(", "window event registration", "Low", "Sanitize event payloads."),
        (r"process\\.env\\.", "env var access", "Low", "Avoid leaking secrets."),
        (r"class\\s+\\w+\\s+extends\\s+Error", "Custom error class", "Low", "Ensure appropriate error handling."),
        (r"Promise\\.all\\(", "Promise.all usage", "Low", "Handle Promise rejections appropriately."),
        (r"as\\s+unknown", "cast to unknown then any", "Low", "Prefer proper typing."),
        (r"fs\\.", "node fs usage", "Low", "Validate file paths."),
        (r"Buffer\\.from\\(", "Buffer.from usage", "Low", "Avoid creating buffers from untrusted input."),
        (r"import\\(['\"].+['\"]\\)", "dynamic import", "Medium", "Validate imported modules."),
        (r"@ts-expect-error", "ts-expect-error", "Low", "Fix underlying issues instead of suppressing."),
        (r"readonly\\s+", "readonly usage", "Low", "Use readonly to prevent mutation."),
        (r"Symbol\\(", "Symbol usage", "Low", "Avoid misuse of Symbol."),
        (r"arguments\\.", "arguments object usage", "Low", "Prefer rest parameters."),
        (r"function\\s*\\*", "generator functions", "Low", "Use only when needed and ensure safety."),
        (r"yield\\s+", "yield usage", "Low", "Ensure correct control flow."),
        (r"@Deprecated", "deprecated annotation", "Low", "Avoid deprecated APIs."),
        (r"globalThis", "globalThis usage", "Low", "Avoid global state when possible."),
        (r"\\bany\\b", "any keyword (again)", "Medium", "Minimize any usage."),
        (r"eval\\s*\\(", "eval duplicate", "High", "Avoid eval."),
    ],
    "PHP": [
        # Code execution / eval / shell
        (r"\beval\s*\(", "Unsafe eval()", "High", "Avoid eval(); use safer parsing."),
        (r"\bexec\s*\(", "Command execution (exec)", "High", "Sanitize inputs and use safe APIs."),
        (r"\bshell_exec\s*\(", "Shell execution (shell_exec)", "High", "Avoid shell_exec; sanitize inputs."),
        (r"\bpassthru\s*\(", "Shell execution (passthru)", "High", "Avoid passthru; sanitize inputs."),
        (r"\bsystem\s*\(", "Shell execution (system)", "High", "Avoid system; sanitize inputs."),
        (r"\bpopen\s*\(", "Shell execution (popen)", "High", "Avoid popen; sanitize inputs."),
        (r"\bproc_open\s*\(", "Shell execution (proc_open)", "High", "Avoid proc_open; sanitize inputs."),

        # File inclusion / file operations
        (r"\binclude\s*\(", "Dynamic include", "High", "Avoid dynamic includes; validate file names."),
        (r"\brequire\s*\(", "Dynamic require", "High", "Avoid dynamic require; validate file names."),
        (r"\binclude_once\s*\(", "Dynamic include_once", "High", "Avoid dynamic includes; validate file names."),
        (r"\brequire_once\s*\(", "Dynamic require_once", "High", "Avoid dynamic require_once; validate file names."),
        (r"\bfile_get_contents\s*\(", "File read", "Medium", "Validate input paths to prevent local file disclosure."),
        (r"\bfile_put_contents\s*\(", "File write", "Medium", "Validate paths and sanitize input."),

        # SQL / database risks
        (r"\bmysql_query\s*\(", "Deprecated mysql_query (SQLi risk)", "High", "Use prepared statements (PDO or mysqli)."),
        (r"\bmysqli_query\s*\(", "Potential SQL injection", "High", "Use prepared statements."),
        (r"\bPDO->query\s*\(", "Potential SQL injection", "High", "Use prepared statements with bound parameters."),
        (r"\bPDO->exec\s*\(", "Potential SQL injection", "High", "Use prepared statements."),

        # Input validation / sanitization
        (r"\$_(GET|POST|REQUEST)\[", "Unvalidated user input", "High", "Validate and sanitize all user input."),
        (r"\bfilter_input\s*\(", "Input validation missing context", "Medium", "Ensure correct filter types are used."),

        # Cryptography / hashing issues
        (r"\bmd5\s*\(", "Weak hashing (MD5)", "Medium", "Use SHA-256 or bcrypt/Argon2."),
        (r"\bsha1\s*\(", "Weak hashing (SHA1)", "Medium", "Use SHA-256 or bcrypt/Argon2."),
        (r"\bbase64_decode\s*\(", "Potential hidden code (base64_decode)", "Medium", "Check input before decoding."),

        # XSS / HTML output
        (r"echo\s+[^;]+", "Potential XSS risk", "Medium", "Escape HTML output using htmlspecialchars or equivalent."),
        (r"print\s+[^;]+", "Potential XSS risk", "Medium", "Escape HTML output using htmlspecialchars or equivalent."),

        # File upload / deserialization
        (r"\bmove_uploaded_file\s*\(", "File upload risk", "High", "Validate file type and path before moving."),
        (r"\bunserialize\s*\(", "Unsafe deserialization", "High", "Avoid unserializing untrusted data."),

        # Cookie / session / CSRF risks
        (r"\$_COOKIE", "Unvalidated cookie", "Medium", "Validate cookie data before use."),
        (r"session_start\s*\(", "Session usage", "Medium", "Ensure secure session handling."),
        (r"\$_SESSION", "Potential session misuse", "Medium", "Validate session values before use."),

        # Deprecated / risky functions
        (r"\bereg\s*\(", "Deprecated function (ereg)", "Medium", "Use preg_match instead."),
        (r"\bsplit\s*\(", "Deprecated function (split)", "Medium", "Use explode() or preg_split()."),
        (r"\bmysql_(connect|select_db|fetch_array)\s*\(", "Deprecated MySQL API", "High", "Use mysqli or PDO."),

        # Hardcoded credentials / API keys
        (r"(password\s*[:=]\s*['\"]\w+['\"]|passwd\s*[:=]\s*['\"]\w+['\"])", "Hardcoded credentials", "High", "Use environment variables."),
        (r"API[_-]?KEY\s*[:=]\s*['\"].+['\"]", "Hardcoded API key", "High", "Store API keys securely."),

        # Potential vulnerable libraries (common PHP libs)
        (r"require\s*\(['\"]vendor/autoload\.php['\"]\)", "Composer dependencies loaded", "Info", "Check vendor libraries for known vulnerabilities."),
        (r"use\s+PHPMailer;", "PHPMailer usage", "Info", "Ensure PHPMailer version is secure."),
        (r"use\s+SwiftMailer;", "SwiftMailer usage", "Info", "Ensure SwiftMailer version is secure."),
        (r"use\s+Guzzle;", "Guzzle HTTP client usage", "Info", "Ensure Guzzle version is secure."),

        # Miscellaneous common risky patterns
        (r"preg_replace\s*\(.*\/e.*\)", "preg_replace /e modifier (code execution)", "High", "Use preg_replace_callback instead."),
        (r"create_function\s*\(", "Dynamic function creation", "High", "Avoid create_function; use closures."),
        (r"\bassert\s*\(", "Assert usage (code execution)", "High", "Avoid assert on untrusted input."),
        (r"\bglob\s*\(", "File pattern reading", "Medium", "Validate file paths and patterns."),
        (r"\bchmod\s*\(", "Changing file permissions", "Medium", "Avoid insecure permissions."),
        (r"\bunlink\s*\(", "File deletion", "Medium", "Validate file paths before deleting."),
        (r"\bcopy\s*\(", "File copy", "Medium", "Validate source and destination."),
        (r"\brename\s*\(", "File rename", "Medium", "Validate source and destination."),
        (r"\btempnam\s*\(", "Temporary file creation", "Medium", "Ensure temp files are secure."),
        (r"\bparse_ini_file\s*\(", "Parsing INI file", "Medium", "Validate configuration files."),
        (r"\bhighlight_file\s*\(", "Code exposure risk", "Medium", "Avoid exposing source code."),
        (r"\bphpinfo\s*\(", "Information disclosure", "Medium", "Remove phpinfo() calls in production."),
        (r"\bvar_dump\s*\(", "Potential sensitive data exposure", "Low", "Remove var_dump() in production."),
    ],

    "Java": [
    (r"Runtime\s*\.\s*getRuntime\s*\(\)\s*\.exec\s*\(", "Runtime.exec() usage", "High", "Avoid dynamic command execution; sanitize inputs."),
    (r"Cipher\.getInstance\(['\"]?AES/ECB", "Use of AES/ECB mode", "High", "Use AES/GCM or CBC with proper IV."),
    (r"Class\.forName\s*\(", "Dynamic class loading", "Medium", "Validate input; avoid loading untrusted classes."),
    (r"ObjectInputStream\s*\(", "Java deserialization", "High", "Avoid deserializing untrusted input."),
    (r"Thread\.sleep\s*\(", "Thread.sleep usage", "Low", "Ensure timing-based attacks not possible."),
    (r"Socket\s*\(", "Socket creation", "Medium", "Validate input and handle exceptions securely."),
    (r"ServerSocket\s*\(", "ServerSocket creation", "Medium", "Bind to safe ports; validate connections."),
    (r"FileOutputStream\s*\(", "File write", "Medium", "Validate paths and avoid overwriting sensitive files."),
    (r"FileInputStream\s*\(", "File read", "Medium", "Validate paths to avoid information disclosure."),
    (r"Properties\.load\s*\(", "Loading properties file", "Medium", "Avoid loading untrusted files."),
    (r"MessageDigest\.getInstance\s*\(\s*['\"]?MD5['\"]?", "MD5 hashing", "Medium", "Use SHA-256 or stronger hashing."),
    (r"MessageDigest\.getInstance\s*\(\s*['\"]?SHA-1['\"]?", "SHA-1 hashing", "Medium", "Use SHA-256 or better."),
    (r"Logger\.getLogger\s*\(", "Logging usage", "Low", "Avoid logging sensitive data."),
    (r"System\.exit\s*\(", "System.exit usage", "Medium", "Avoid abrupt termination; handle gracefully."),
    (r"ProcessBuilder\s*\(", "ProcessBuilder usage", "High", "Validate input commands; avoid injection."),
    (r"URL\.openConnection\s*\(", "URL connection", "Medium", "Validate URLs; avoid SSRF attacks."),
    (r"HttpsURLConnection\.setSSLSocketFactory\s*\(", "Custom SSL Socket", "High", "Use proper certificates; avoid insecure connections."),
    (r"TrustManager\s*\{", "Custom TrustManager", "High", "Avoid trusting all certs; enforce validation."),
    (r"ScriptEngineManager\s*\(", "Script engine execution", "High", "Avoid executing untrusted scripts."),
    (r"Reflection\s*\.", "Reflection usage", "Medium", "Validate inputs; avoid exposing private members."),
    (r"ObjectOutputStream\s*\(", "Serialization output", "High", "Avoid writing sensitive data insecurely."),
],

"C": [
    (r"\bstrcpy\s*\(", "Unsafe strcpy", "High", "Use strncpy or bounds-checked functions."),
    (r"\bgets\s*\(", "Unsafe gets", "High", "Use fgets with size limits."),
    (r"\bscanf\s*\(", "Unsafe scanf", "High", "Use width specifiers to prevent buffer overflow."),
    (r"\bstrcat\s*\(", "Unsafe strcat", "High", "Use strncat or safer alternatives."),
    (r"\bmemcpy\s*\(", "Unsafe memcpy", "High", "Check bounds before copying memory."),
    (r"\bsprintf\s*\(", "Unsafe sprintf", "High", "Use snprintf with buffer limits."),
    (r"\bvsprintf\s*\(", "Unsafe vsprintf", "High", "Use vsnprintf with buffer limits."),
    (r"\batoi\s*\(", "Potential input conversion risk", "Medium", "Use strtol and validate input."),
    (r"\bgetenv\s*\(", "Environment variable access", "Medium", "Validate input; avoid exposing secrets."),
    (r"\bfopen\s*\(", "File open", "Medium", "Validate file paths; avoid overwriting critical files."),
    (r"\bfclose\s*\(", "File close", "Low", "Check return values; handle errors."),
    (r"\bfread\s*\(", "File read", "Medium", "Validate size and pointer bounds."),
    (r"\bfwrite\s*\(", "File write", "Medium", "Validate buffer sizes."),
    (r"\bmalloc\s*\(", "Dynamic memory allocation", "Medium", "Check for NULL; prevent buffer overflow."),
    (r"\bfree\s*\(", "Free memory", "Low", "Avoid double free."),
    (r"\brealloc\s*\(", "Memory reallocation", "Medium", "Check new size; handle errors."),
    (r"\bmemmove\s*\(", "Memory move", "Medium", "Validate size and overlapping buffers."),
    (r"\bstrncpy\s*\(", "strncpy usage", "Low", "Ensure null-termination."),
    (r"\bstrncmp\s*\(", "strncmp usage", "Low", "Ensure proper length."),
    (r"\bchdir\s*\(", "Directory change", "Low", "Validate paths; avoid path traversal."),
],

"C++": [
    (r"\bstrcpy\s*\(", "Unsafe strcpy", "High", "Prefer std::string or strncpy."),
    (r"\bmemcpy\s*\(", "Unbounded memcpy", "High", "Validate sizes before memcpy."),
    (r"\bstrncpy\s*\(", "strncpy usage", "Low", "Ensure null-termination."),
    (r"\bstrcat\s*\(", "Unsafe strcat", "High", "Use safer concatenation."),
    (r"\bsprintf\s*\(", "Unsafe sprintf", "High", "Use snprintf with bounds."),
    (r"\bnew\s+\w+", "Heap allocation", "Low", "Ensure delete is called; prevent leaks."),
    (r"\bdelete\s+", "Delete operator", "Low", "Avoid double delete; check null."),
    (r"\bstd::system\s*\(", "System call", "High", "Avoid executing untrusted commands."),
    (r"\bfopen\s*\(", "File open", "Medium", "Validate paths and permissions."),
    (r"\bfread\s*\(", "File read", "Medium", "Validate size and pointers."),
    (r"\bfwrite\s*\(", "File write", "Medium", "Validate buffer size."),
    (r"\bscanf\s*\(", "Unsafe scanf", "High", "Use width specifiers."),
    (r"\bgets\s*\(", "Unsafe gets", "High", "Use fgets."),
    (r"\bstd::ifstream\s*\(", "File input stream", "Medium", "Validate path."),
    (r"\bstd::ofstream\s*\(", "File output stream", "Medium", "Validate path."),
    (r"\bmemmove\s*\(", "Memory move", "Medium", "Validate bounds."),
    (r"\bstrlen\s*\(", "String length", "Low", "Avoid buffer overflow."),
    (r"\bmemcmp\s*\(", "Memory compare", "Low", "Validate lengths."),
    (r"\bthrow\s+", "Throw usage", "Low", "Ensure exception safety."),
    (r"\bcatch\s+", "Catch usage", "Low", "Handle exceptions properly."),
    (r"\bstd::thread\s*\(", "Thread creation", "Medium", "Validate thread inputs."),
    (r"\bstd::mutex\s*\(", "Mutex usage", "Low", "Ensure deadlock prevention."),
    (r'\b\w*\b\s*=\s*["\'].*["\']', "Hardcoded string", "Medium", "Avoid hardcoding secrets; use environment variables."),

],

"Go": [
    (r"os\.Exec\s*\(", "os.Exec usage", "High", "Avoid direct exec; validate inputs."),
    (r"http\.ListenAndServe\(", "Use of default HTTP server without TLS", "High", "Use TLS and proper server configuration."),
    (r"ioutil\.ReadFile\s*\(", "ReadFile usage", "Medium", "Validate paths; avoid info leaks."),
    (r"ioutil\.WriteFile\s*\(", "WriteFile usage", "Medium", "Validate paths; avoid overwriting files."),
    (r"os\.Remove\s*\(", "File deletion", "Medium", "Validate paths."),
    (r"os\.Rename\s*\(", "File rename", "Medium", "Validate paths."),
    (r"os\.Chmod\s*\(", "Change file permissions", "Medium", "Avoid insecure permissions."),
    (r"os\.Open\s*\(", "File open", "Medium", "Validate paths."),
    (r"net\.Dial\s*\(", "Raw network dial", "Medium", "Validate endpoints."),
    (r"net/http\.Get\s*\(", "HTTP GET", "Low", "Validate URLs; avoid SSRF."),
    (r"net/http\.Post\s*\(", "HTTP POST", "Low", "Validate payload; avoid secrets in plain text."),
    (r"crypto/md5\.New", "MD5 usage", "Medium", "Use SHA-256 or better."),
    (r"crypto/sha1\.New", "SHA1 usage", "Medium", "Use SHA-256 or better."),
    (r"template\.Execute\s*\(", "Template execution", "Medium", "Escape user input; avoid XSS."),
    (r"text/template\.Execute\s*\(", "Text template execution", "Medium", "Sanitize input."),
    (r"html/template\.Execute\s*\(", "HTML template execution", "Medium", "Escape HTML to prevent XSS."),
    (r"io/ioutil\.TempFile\s*\(", "Temp file creation", "Medium", "Use secure temp files."),
    (r"io/ioutil\.TempDir\s*\(", "Temp dir creation", "Medium", "Use secure temp dirs."),
    (r"reflect\.ValueOf\s*\(", "Reflection usage", "Medium", "Validate input types."),
    (r"sync\.Mutex", "Mutex usage", "Low", "Avoid deadlocks; unlock properly."),
    (r"context\.WithTimeout", "Context timeout", "Low", "Handle cancellation and timeout errors."),
], 
"Rust": [
    (r"\bunsafe\s*{", "Unsafe block", "High", "Minimize unsafe usage and document reasons."),
    (r"\bstd::mem::transmute\s*\(", "Memory transmute", "High", "Avoid unsafe type conversions."),
    (r"\bBox::from_raw\s*\(", "Raw pointer from Box", "High", "Validate pointer safety."),
    (r"\bptr::read\s*\(", "Pointer read", "High", "Avoid reading uninitialized memory."),
    (r"\bptr::write\s*\(", "Pointer write", "High", "Avoid writing to invalid memory."),
    (r"\bget_unchecked\s*\(", "Unchecked access", "High", "Use safe indexing methods."),
    (r"\bset_len\s*\(", "Vector set_len", "High", "Avoid unsafe length changes; may corrupt memory."),
    (r"\bstd::mem::forget\s*\(", "Memory leak risk", "Medium", "Ensure proper deallocation."),
    (r"\bstd::panic!\s*\(", "Panic usage", "Low", "Avoid panics in production; handle errors."),
    (r"\bstd::thread::spawn\s*\(", "Thread spawn", "Medium", "Validate thread inputs."),
    (r"\bstd::fs::File::open\s*\(", "File open", "Medium", "Validate paths; avoid disclosure."),
    (r"\bstd::fs::read_to_string\s*\(", "File read", "Medium", "Sanitize input paths."),
    (r"\bstd::fs::write\s*\(", "File write", "Medium", "Validate paths to prevent overwrites."),
    (r"\bserde_json::from_str\s*\(", "Deserialization", "High", "Avoid untrusted data deserialization."),
    (r"\bformat!\s*\(", "String formatting", "Low", "Avoid exposing sensitive data."),
    (r"\bregex::Regex::new\s*\(", "Dynamic regex", "Medium", "Validate user input to avoid DoS."),
    (r"\blibc::malloc\s*\(", "Unsafe malloc", "High", "Use Rust memory-safe alternatives."),
    (r"\blibc::free\s*\(", "Unsafe free", "Medium", "Ensure pointer is valid."),
    (r"\bstd::ptr::null\s*\(", "Null pointer usage", "Medium", "Validate pointers before dereference."),
    (r"\bBox::into_raw\s*\(", "Raw pointer from Box", "High", "Validate pointer safety."),
    (r"\bextern\s+\"C\"\s*{", "FFI block", "High", "Validate external C function calls."),
],

"Ruby": [
    (r"\beval\s*\(", "Unsafe eval()", "High", "Avoid eval; use safer parsing."),
    (r"system\s*\(", "system() execution", "High", "Sanitize inputs before executing system calls."),
    (r"exec\s*\(", "Exec usage", "High", "Validate input to avoid code execution."),
    (r"Kernel\.eval\s*\(", "Kernel.eval", "High", "Avoid dynamic evaluation."),
    (r"`[^`]+`", "Backticks execution", "High", "Avoid executing shell commands."),
    (r"IO\.popen\s*\(", "Popen execution", "High", "Validate inputs; avoid code injection."),
    (r"File\.read\s*\(", "File read", "Medium", "Validate paths; avoid sensitive file exposure."),
    (r"File\.write\s*\(", "File write", "Medium", "Validate paths; avoid overwriting critical files."),
    (r"YAML\.load\s*\(", "Unsafe YAML load", "High", "Use safe_load for untrusted input."),
    (r"Marshal\.load\s*\(", "Unsafe deserialization", "High", "Avoid untrusted Marshal.load."),
    (r"Open3\.popen3\s*\(", "Command injection risk", "High", "Sanitize input commands."),
    (r"Dir\.glob\s*\(", "Directory globbing", "Medium", "Validate input patterns."),
    (r"send\s*\(", "Dynamic method call", "High", "Validate method names to prevent injection."),
    (r"instance_eval\s*\(", "Instance eval", "High", "Avoid dynamic code evaluation."),
    (r"Thread\.new\s*\(", "Thread creation", "Medium", "Validate input; handle safely."),
    (r"system\?", "System call check", "Medium", "Avoid unvalidated system calls."),
    (r"Socket\.new\s*\(", "Socket creation", "Medium", "Validate network endpoints."),
    (r"TCPSocket\.open\s*\(", "TCP socket", "Medium", "Validate connection targets."),
    (r"UDPSocket\.open\s*\(", "UDP socket", "Medium", "Validate input."),
    (r"OpenSSL::Cipher\.new\s*\(", "Cryptography", "Medium", "Use safe cipher modes and key sizes."),
    (r"Net::HTTP\.start\s*\(", "HTTP connection", "Medium", "Validate URLs; avoid SSRF."),
],

"Shell": [
    (r"\brm\s+-rf\s+/", "Dangerous rm -rf /", "Critical", "Never run rm -rf on root; validate input."),
    (r"`[^`]+`", "Backtick command execution", "High", "Avoid backticks; use safer APIs."),
    (r"\beval\s+", "eval in shell", "High", "Avoid eval; prefer safe parsing."),
    (r"\bsource\s+", "Source usage", "High", "Validate scripts before sourcing."),
    (r"\bchmod\s+\d+", "Change permissions", "Medium", "Avoid insecure file modes."),
    (r"\bchown\s+", "Change ownership", "Medium", "Avoid unauthorized ownership changes."),
    (r"\bmkdir\s+", "Directory creation", "Low", "Validate paths."),
    (r"\brmdir\s+", "Directory removal", "Medium", "Validate paths."),
    (r"\bcp\s+", "Copy files", "Medium", "Validate source and destination."),
    (r"\bmv\s+", "Move files", "Medium", "Validate source and destination."),
    (r"\bdd\s+", "Disk write", "High", "Avoid overwriting devices."),
    (r"\bmkfs\s+", "Filesystem format", "Critical", "Validate target devices."),
    (r"\bpasswd\s+", "Password change", "High", "Avoid automated password modification scripts."),
    (r"\bkill\s+", "Process termination", "Medium", "Validate PID and permissions."),
    (r"\bexport\s+", "Environment variables", "Medium", "Avoid exporting secrets in scripts."),
    (r"\bfunction\s+\w+\s*\(", "Shell function", "Low", "Validate function behavior."),
    (r"\btrap\s+", "Signal trap", "Medium", "Handle errors safely."),
    (r"\bread\s+", "User input read", "Medium", "Sanitize input."),
    (r"\bset\s+-e", "Exit on error", "Low", "Ensure error handling."),
    (r"\bset\s+-u", "Unset variable check", "Low", "Avoid uninitialized variables."),
    (r"\bprintf\s+", "Output printing", "Low", "Escape user input."),
],

"HTML": [
    (r"<script[^>]*>.*</script>", "Inline script tag", "Medium", "Avoid inline scripts; use CSP and safe JS."),
    (r"on\w+\s*=", "Inline event handler", "Medium", "Avoid inline handlers; attach via JS."),
    (r"<iframe[^>]+>", "Iframe usage", "Medium", "Validate sources to prevent clickjacking."),
    (r"<img[^>]+on\w+\s*=", "Inline image events", "Medium", "Avoid inline event handlers."),
    (r"<a[^>]+javascript:", "JS in href", "High", "Avoid JS in links."),
    (r"<form[^>]+action=['\"]?javascript:", "JS in form action", "High", "Avoid JS actions; use server endpoints."),
    (r"<object[^>]+>", "Object/embed tag", "Medium", "Validate embedded content."),
    (r"<embed[^>]+>", "Embed tag", "Medium", "Validate content."),
    (r"<applet[^>]+>", "Applet tag", "Medium", "Avoid legacy applets."),
    (r"<meta[^>]+http-equiv=['\"]?refresh", "Meta refresh", "Medium", "Avoid automatic redirects."),
    (r"<link[^>]+rel=['\"]?import", "HTML imports", "Low", "Validate imported content."),
    (r"<base[^>]+href", "Base tag href", "Low", "Ensure proper base path."),
    (r"<script\s+src=['\"]?http:", "HTTP script src", "High", "Use HTTPS sources."),
    (r"<script\s+src=['\"]?https?:\/\/untrusted", "Untrusted external JS", "High", "Avoid including untrusted scripts."),
    (r"<style[^>]*>.*</style>", "Inline style", "Low", "Consider moving styles to CSS files."),
    (r"document\.write\s*\(", "Document.write usage", "High", "Avoid dynamic HTML injection."),
    (r"innerHTML\s*=", "InnerHTML assignment", "High", "Avoid inserting untrusted content."),
    (r"eval\s*\(", "JS eval", "High", "Avoid eval; use safe parsing."),
    (r"setTimeout\s*\(", "Dynamic timeout eval", "Medium", "Avoid string evaluation in timers."),
    (r"setInterval\s*\(", "Dynamic interval eval", "Medium", "Avoid string evaluation in timers."),
    (r"window\.open\s*\(", "Window open", "Medium", "Validate URLs to avoid phishing/popups."),
],

}

# Generic rules that apply to any language
GENERIC_RULES = [
    (r"(?:api[_-]?key|apikey|secret|access_token|auth_token)\s*[:=]\s*['\"][A-Za-z0-9\-\._=+/]+['\"]",
     "Hardcoded secret/token", "High", "Move secrets to environment variables or a secrets manager."),
    (r"(?:password|passwd|pwd)\s*[:=]\s*['\"][^'\"]{4,}['\"]",
     "Hardcoded password", "High", "Do not store passwords in source code."),
    (r"MD5\s*\(|\bmd5\(", "Use of MD5", "Medium", "Use SHA-256 or stronger hashing."),
    (r"sha1\s*\(|\bSHA1\b", "Use of SHA-1", "Medium", "Use SHA-256 or better."),
    (r"verify\s*=\s*False|create_unverified_context", "TLS verification disabled", "High", "Do not disable TLS verification in production."),
    (r"(\.\./|\.\.\\)", "Path traversal sequence", "High", "Normalize and validate file paths; restrict to safe directories."),
    (r"\b(unpickle|pickle\.loads|pickle\.load|yaml\.load|Marshal\.load)\b", "Unsafe deserialization", "High", "Avoid deserializing untrusted input."),
    (r"log\.\w+\(.+%s.+\)", "Potential log format injection", "Medium", "Use structured logging and sanitize inputs."),
]